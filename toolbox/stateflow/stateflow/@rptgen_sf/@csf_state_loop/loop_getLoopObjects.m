function hList = loop_getLoopObjects(c)
    % 1 9
    % 2 9
    % 3 9
    % 4 9
    % 5 9
    % 6 9
    % 7 9
    hList = [];
    % 9 12
    % 10 12
    if strcmp(c.Depth, 'local')
        depthTerms = {'-depth',[1.0]};
    else
        depthTerms = {};
    end
    % 16 18
    adSF = rptgen_sf.appdata_sf;
    currContext = getContextType(adSF, c, logical(0));
    switch lower(currContext)
    case 'machine'
        parentID = get(adSF, 'CurrentMachine');
    case 'chart'
        parentID = get(adSF, 'CurrentChart');
    case 'state'
        parentID = get(rptgen_sf.appdata_sf, 'CurrentState');
    case 'object'
        % 27 29
        parentID = adSF.CurrentObject;
        if not(isempty(parentID))
            parentID = parentID.up;
            if isa(parentID, 'Stateflow.State') || isa(parentID, 'Stateflow.EMFunction') || isa(parentID, 'Stateflow.Function') || isa(parentID, 'Stateflow.Box') || isa(parentID, 'Stateflow.Truthtable')
                % 32 37
                % 33 37
                % 34 37
                % 35 37
                depthTerms = {'-depth',[0.0]};
            else
                parentID = [];
            end
        end
    otherwise
        % 42 44
        chartLoop = rptgen_sf.csf_chart_loop;
        parentComp = c.up;
        if not(isempty(parentComp))
            connect(parentComp, chartLoop, 'down');
        end
        % 48 50
        parentID = chartLoop.loop_getLoopObjects;
        disconnect(chartLoop);
    end
    % 52 54
    if isempty(parentID)
        return
    end
    % 56 58
    typeFilter = addTypeFilter(c.isAndOrStates, 'State', {});
    typeFilter = addTypeFilter(c.isFcnStates, 'Function', typeFilter);
    typeFilter = addTypeFilter(c.isEMFunctions, 'EMFunction', typeFilter);
    typeFilter = addTypeFilter(c.isBoxStates, 'Box', typeFilter);
    typeFilter = addTypeFilter(c.isTruthTables, 'TruthTable', typeFilter);
    % 62 64
    if c.isSFFilterList
        filterTerms = rptgen_sf.findTerms(c.SFFilterTerms);
    else
        filterTerms = {};
    end
    % 68 71
    % 69 71
    if c.SkipAutogenerated
        agTerms = cellhorzcat('-function', @isNotAutogenerated);
    else
        agTerms = {};
    end
    % 75 77
    hList = find(parentID, depthTerms{:}, typeFilter, filterTerms{:}, agTerms{:});
    % 77 81
    % 78 81
    % 79 81
    if gt(length(hList), 0.0)
        if eq(hList(1.0), parentID)
            % 82 85
            % 83 85
            hList = hList(2.0:end);
        end
        hList = hList(:);
    end
end
function tft = addTypeFilter(isTrue, sfType, tft)
    % 90 93
    % 91 93
    if isTrue
        thisTerm = cellhorzcat('-isa', horzcat('Stateflow.', sfType));
        if isempty(tft)
            tft = thisTerm;
        else
            tft = horzcat(tft, {'-or'}, thisTerm);
        end
    end
end
function tf = isNotAutogenerated(sfID)
    % 102 108
    % 103 108
    % 104 108
    % 105 108
    % 106 108
    tf = rptgen_sf.isNotAutogenerated(sfID);
end
