function schema
    % 1 9
    % 2 9
    % 3 9
    % 4 9
    % 5 9
    % 6 9
    % 7 9
    pkg = findpackage('rptgen_sf');
    pkgRG = findpackage('rptgen');
    % 10 12
    h = schema.class(pkg, 'csf_state_loop', pkgRG.findclass('rpt_looper'));
    % 12 14
    p = rptgen.prop(h, 'isAndOrStates', 'bool', true, xlate('Include "and" and "or" states'));
    % 14 16
    p = rptgen.prop(h, 'isBoxStates', 'bool', true, xlate('Include "box" states'));
    % 16 18
    p = rptgen.prop(h, 'isFcnStates', 'bool', true, xlate('Include functions'));
    % 18 20
    p = rptgen.prop(h, 'isTruthTables', 'bool', false, xlate('Include truth tables'));
    % 20 22
    p = rptgen.prop(h, 'isEMFunctions', 'bool', false, xlate('Include embedded MATLAB functions'));
    % 22 26
    % 23 26
    % 24 26
    p = rptgen.prop(h, 'LockType', 'bool', false, '');
    % 26 28
    p.AccessFlags.PublicSet = 'off';
    p.AccessFlags.PublicGet = 'off';
    p.Visible = 'off';
    % 30 41
    % 31 41
    % 32 41
    % 33 41
    % 34 41
    % 35 41
    % 36 41
    % 37 41
    % 38 41
    % 39 41
    p = rptgen.prop(h, 'Depth', {'local','Local children only';'deep','All objects'}, 'deep', xlate('Report depth'), 1.0);
    % 41 47
    % 42 47
    % 43 47
    % 44 47
    % 45 47
    p = rptgen.prop(h, 'SkipAutogenerated', 'bool', true, xlate('Skip autogenerated charts under truth tables'));
    % 47 51
    % 48 51
    % 49 51
    p = rptgen.prop(h, 'isSFFilterList', 'bool', logical(0), xlate('Search Stateflow:'));
    % 51 55
    % 52 55
    % 53 55
    p = rptgen.prop(h, 'SFFilterTerms', 'string vector', {'Tag','MyTag'});
    p.Visible = 'off';
    % 56 60
    % 57 60
    % 58 60
    rptgen.makeStaticMethods(h, {}, {'loop_getContextString';'loop_getLoopObjects';'loop_getObjectType';'loop_getPropSrc';'loop_restoreState';'loop_saveState';'loop_setState';'setObjectType'});
    % 60 70
    % 61 70
    % 62 70
    % 63 70
    % 64 70
    % 65 70
    % 66 70
    % 67 70
    % 68 70
end
