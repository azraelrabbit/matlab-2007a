function source_ang_velocity(root, schema)
    % 1 20
    % 2 20
    % 3 20
    % 4 20
    % 5 20
    % 6 20
    % 7 20
    % 8 20
    % 9 20
    % 10 20
    % 11 20
    % 12 20
    % 13 20
    % 14 20
    % 15 20
    % 16 20
    % 17 20
    % 18 20
    % 19 20
    schema.descriptor = 'Ideal Angular Velocity Source';
    % 21 23
    % 22 23
    S = schema.input('S');
    S.description = 'Control signal';
    S.location = {'Bottom';[0.25]};
    S.type = ne_type('real', [1.0 1.0], 'rad/s');
    % 27 28
    C = schema.terminal('C');
    C.description = 'Source case';
    C.domain = root.fl.mechanical.rotational.rotational;
    C.location = {'Bottom';[0.75]};
    % 32 33
    R = schema.terminal('R');
    R.description = 'Source rod';
    R.domain = root.fl.mechanical.rotational.rotational;
    R.location = {'Top';[0.5]};
    % 37 41
    % 38 41
    % 39 41
    % 40 41
    var_int_f = schema.local_variable('torque');
    var_int_f.description = 'Torque (N*m)';
    % 43 44
    var_int_v = schema.local_variable('rel_velocity');
    var_int_v.description = 'Relative velocity (rad/s)';
    % 46 47
    var_int_p = schema.local_variable('power');
    var_int_p.description = 'Power generated by the sourcec(W)';
    % 49 50
    schema.setup(@setup);
    % 51 52
end % function
function setup(root, source_vel)
    % 54 56
    % 55 56
    source_vel.branch_across('w', source_vel.R.w, source_vel.C.w);
    source_vel.branch_through('t', source_vel.R.t, source_vel.C.t);
    % 58 59
    source_vel.equation(@equation);
end % function
function e = equation(sys, source_vel)
    % 62 64
    % 63 64
    e = sys.equation;
    % 65 66
    rel_velocity = source_vel.S;
    torque = source_vel.t;
    power = mtimes(rel_velocity, torque);
    % 69 70
    e = minus(rel_velocity, source_vel.w);
end % function
