function source_force(root, schema)
    % 1 18
    % 2 18
    % 3 18
    % 4 18
    % 5 18
    % 6 18
    % 7 18
    % 8 18
    % 9 18
    % 10 18
    % 11 18
    % 12 18
    % 13 18
    % 14 18
    % 15 18
    % 16 18
    % 17 18
    schema.descriptor = 'Ideal Force Source';
    % 19 21
    % 20 21
    S = schema.input('S');
    S.description = 'Control signal';
    S.location = {'Bottom';[0.25]};
    S.type = ne_type('real', [1.0 1.0], 'N');
    % 25 26
    C = schema.terminal('C');
    C.description = 'Source case';
    C.domain = root.fl.mechanical.translational.translational;
    C.location = {'Bottom';[0.75]};
    % 30 31
    R = schema.terminal('R');
    R.description = 'Source rod';
    R.domain = root.fl.mechanical.translational.translational;
    R.location = {'Top';[0.5]};
    % 35 39
    % 36 39
    % 37 39
    % 38 39
    var_int_f = schema.local_variable('force');
    var_int_f.description = 'Force (N)';
    % 41 42
    var_int_v = schema.local_variable('rel_velocity');
    var_int_v.description = 'Relative velocity (m/s)';
    % 44 45
    var_int_p = schema.local_variable('power');
    var_int_p.description = 'Power generated by the source (W)';
    % 47 48
    schema.setup(@setup);
    % 49 50
end % function
function setup(root, source_frc)
    % 52 54
    % 53 54
    source_frc.branch_across('v', source_frc.C.v, source_frc.R.v);
    source_frc.branch_through('f', source_frc.C.f, source_frc.R.f);
    % 56 57
    source_frc.equation(@equation);
end % function
function e = equation(sys, source_frc)
    % 60 62
    % 61 62
    e = sys.equation;
    % 63 64
    force = source_frc.S;
    rel_velocity = source_frc.v;
    power = mtimes(rel_velocity, force);
    % 67 68
    e = minus(force, source_frc.f);
end % function
