function [filter, mcode] = defaultfilter(this)
    % 1 20
    % 2 20
    % 3 20
    % 4 20
    % 5 20
    % 6 20
    % 7 20
    % 8 20
    % 9 20
    % 10 20
    % 11 20
    % 12 20
    % 13 20
    % 14 20
    % 15 20
    % 16 20
    % 17 20
    % 18 20
    % 19 20
    b = [-.000919098208468256 -.0027176960265955 -.00248695275983231 .00366143838350709 .0136509252306624 .0173511659010933 .00766530619042168 -.0065547188696424 -.00769678403706536 .00610545942139436 .0138739157486354 .00035086172829091 -.0169089254366905 -.00890564274915868 .0174411295008549 .0207450445276099 -.0122964942519403 -.0342408659095784 -.0010345296055724 .0477903055208015 .027363037914848 -.0593795188310466 -.0823070259292291 .0671869094328705 .310015177090251 .430047880343517 .310015177090251 .0671869094328705 -.0823070259292291 -.0593795188310466 .027363037914848 .0477903055208015 -.0010345296055724 -.0342408659095784 -.0122964942519403 .0207450445276099 .0174411295008549 -.00890564274915868 -.0169089254366905 .00035086172829091 .0138739157486354 .00610545942139436 -.00769678403706536 -.0065547188696424 .00766530619042168 .0173511659010933 .0136509252306624 .00366143838350709 -.00248695275983231 -.0027176960265955 -.000919098208468256];
    % 21 72
    % 22 72
    % 23 72
    % 24 72
    % 25 72
    % 26 72
    % 27 72
    % 28 72
    % 29 72
    % 30 72
    % 31 72
    % 32 72
    % 33 72
    % 34 72
    % 35 72
    % 36 72
    % 37 72
    % 38 72
    % 39 72
    % 40 72
    % 41 72
    % 42 72
    % 43 72
    % 44 72
    % 45 72
    % 46 72
    % 47 72
    % 48 72
    % 49 72
    % 50 72
    % 51 72
    % 52 72
    % 53 72
    % 54 72
    % 55 72
    % 56 72
    % 57 72
    % 58 72
    % 59 72
    % 60 72
    % 61 72
    % 62 72
    % 63 72
    % 64 72
    % 65 72
    % 66 72
    % 67 72
    % 68 72
    % 69 72
    % 70 72
    % 71 72
    filter = dfilt.dffir(b);
    % 73 75
    % 74 75
    m.fs = 48000.0;
    m.frequnits = 'Hz';
    m.response = 'magresp';
    m.magunits = 'db';
    m.bands{1.0}.frequency = [0.0 9600.0];
    m.bands{1.0}.filtertype = 'lowpass';
    m.bands{1.0}.magfcn = 'pass';
    m.bands{1.0}.amplitude = 1.0;
    m.bands{1.0}.magunits = 'dB';
    m.bands{1.0}.astop = -130.0;
    % 85 86
    m.bands{2.0}.frequency = [12000.0 24000.0];
    m.bands{2.0}.filtertype = 'lowpass';
    m.bands{2.0}.freqfcn = 'wstop';
    m.bands{2.0}.magfcn = 'stop';
    m.bands{2.0}.amplitude = 80.0;
    m.bands{2.0}.magunits = 'dB';
    % 92 93
    p = schema.prop(filter, 'MaskInfo', 'MATLAB array');
    set(p, 'Visible', 'Off');
    set(filter, 'MaskInfo', m);
    % 96 97
    if gt(nargout, 1.0)
        mcode = {'% Equiripple FIR Lowpass filter designed using the FIRPM function.','','% All frequency values are in Hz.','Fs = 48000;  % Sampling Frequency','','Fpass = 9600;            % Passband Frequency','Fstop = 12000;           % Stopband Frequency','Dpass = 0.057501127785;  % Passband Ripple','Dstop = 0.0001;          % Stopband Attenuation','dens  = 16;              % Density Factor','','% Calculate the order from the parameters using FIRPMORD.','[N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);','','% Calculate the coefficients using the FIRPM function.','b  = firpm(N, Fo, Ao, W, {dens});','Hd = dfilt.dffir(b);'};
        % 99 116
        % 100 116
        % 101 116
        % 102 116
        % 103 116
        % 104 116
        % 105 116
        % 106 116
        % 107 116
        % 108 116
        % 109 116
        % 110 116
        % 111 116
        % 112 116
        % 113 116
        % 114 116
        % 115 116
    end % if
end % function
